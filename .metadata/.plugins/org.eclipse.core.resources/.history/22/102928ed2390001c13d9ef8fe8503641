package desafio;
import java.util.HashSet;
import java.util.Set;

public class teste {
    public static Set<String> permutationFinder(String str) {
        Set<String> perm = new HashSet<String>();
        if (str == null) {
            return null;
        } else if (str.length() == 0) {
            perm.add("");
            return perm;
        }
        char initial = str.charAt(0); 
        String rem = str.substring(1);
        Set<String> words = permutationFinder(rem);
        for (String strNew : words) {
            for (int i = 0;i<=strNew.length();i++){
                perm.add(insertChar(strNew, initial, i));
            }
        }
        return perm;
    }

    public static String insertChar(String str, char c, int j) {
        String begin = str.substring(0, j);
        String end = str.substring(j);
        return begin + c + end;
    }
    
    public static void main(String args[]){
        String s1 = "ifiqq";
        s1 += "|";
        String aux1,aux2;
        
        char [] letras = s1.toCharArray();
        
        int cont = 0;
        
       for(int i = 0; i < s1.length(); i++) {
    	   
    	   for( int j= i+1; j < s1.length(); j++) {
    		   
    		   if(letras[i] == letras[j])
    			   cont++;
    	   }
    	   
       }
       
       for(int h = 1; h <= s1.length(); h++) {
    	   
           for(int i = 0; i < s1.length(); i++) {
    		   
        	   if(letras[i+h] == '|')
    			   break;
        	   
        	   aux1 = s1.substring(i, i+h);
        	   
        	   
        	   for( int j= i+1; j < s1.length() -1; j++) {
        		   
//        		   if(letras[j+h-1] == '|')
//        			   break;
        		   
        		   aux2 = s1.substring(j, j+h);
        		   
        		   System.out.printf("%s,%s \n",aux1,aux2);
        	   }
        	   
           }
       }

       
       
       
       
       
      
    }

}






